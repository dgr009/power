<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

<!-- 톰캣서버에 connection pool 설정 = 서버에대한 연결을 미리 만들어준다. JNDI 이름으로 지정한다 -->
<!-- JUNIT을 사용하기 위해(Test 하기위해) server와는 별개로 context를 새로 설정 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="net.sf.log4jdbc.DriverSpy"/>
		<property name="url" value="jdbc:log4jdbc:oracle:thin:@192.168.0.170:1521:XE"/>
		<property name="username" value="palette"/>
		<property name="password" value="1234"/>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:/mappers/mainFunctionMapper.xml"/><!-- 마이바티스 설정파일 위치 -->
	
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache"><!-- 자동클로즈 --> 
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	
	<context:annotation-config/>
	<context:component-scan base-package="com.icia.api"/><!-- 이거 패키지 틀리면 주입오류뜸! -->
	
<!-- 	트랜잭션를 관리할 String Bean을 만들자 ! -->
<!-- 	<bean id="transactionManager"  -->
<!-- 	class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> -->
<!-- 		<property name="dataSource" ref="dataSource" />	 -->
<!-- 	</bean> -->
<!-- 	<tx:annotation-driven proxy-target-class="true" /> -->

	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager"/>
	
	<!-- 스프링의 트랜잭션 관리  :  DataAccessException 발생시 -->
	<bean id="transactionManager"
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource"/>
	</bean>

</beans>

