<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="api.dao.HomeDao">

	<!-- 홈페이지 개설 -->
	<insert id="miniHomeRegisterHomepage" parameterType="MiniHome">
	
		insert into home values(#{userId},#{homeTitle},#{homeImg},#{homeDesign},sysdate,0,#{homeIntroduce})
	</insert>
	
	
	<!-- 홈페이지 수정 -->
	<update id="miniHomeUpdate" parameterType="MiniHome">
		update home set home_title=#{homeTitle}, home_img=#{homeImg}, home_design=#{homeDesign}, 
		home_introduce=#{homeIntroduce} where user_id=#{userId}
	</update>
	
	<!-- 홈페이지 폐쇄 -->
	<delete id="miniHomeDelete" parameterType="string">
		delete from home where user_id=#{userId}
	</delete>
	
	<!-- 홈페이지 결제 : 활성화기록 생성 -->
	<insert id="miniHomeInsertActiveStatement" parameterType="string">
		insert into activedate(activeno,active_start,active_end,user_id) values(seq_active.nextval,sysdate,add_months(sysdate,3),#{userId})
	</insert>
	<!-- 홈페이지 결제 : 회원 포인트 차감 -->
	<update id="miniHomeDecreaseUsersPoint" parameterType="string">
		update users set user_point=user_point-30000 where user_id=#{userId}
	</update>
	
	<!-- 홈페이지 결제 : 홈페이지 활성화 -->
	<update id="miniHomeActivateHome" parameterType="string">
		 update home set home_active=1 where user_id=#{userId}
	</update>
	
	<!-- 판매자(홈페이지 주인) 회원정보조회 -->
	<select id="miniHomeSelectSellerInformation" parameterType="string" resultType="MiniHomeInformation">
		select u.user_name userName,u.user_mail userMail,u.user_phone userPhone,u.user_grade userGrade,
		h.home_introduce homeIntroduce, h.home_title homeTitle from users u, home h 
		where u.user_id=h.user_id and u.user_id=#{userId}
	</select>
	
	<!-- 이용권 구매내역 -->
	<select id="selectActiveDate" parameterType="hashmap" resultType="ActiveDate">
	<![CDATA[
			select b2.* from
			(select rownum rnum, b.* from
			(select activeno, active_start, active_end, user_id from activedate where user_id=#{userId} 
			order by activeno desc) b where rownum<=#{end} ) b2 where rnum>=#{start}
	]]>
	</select>
	
	
	<!-- 총 게시글 수 -->
	<select id="countActiveDate" resultType="int" parameterType="string">
		select count(*) from activedate where user_id=#{userId}
	</select>

	<!-- 회원 홈페이지 결제 완료 -->
	<update id="userActiveHome" parameterType="string">
		update users set user_activeHome='1' where user_id=#{userId}
	</update>
	
</mapper>

<!-- <resultmap id="getMember" class="member"> -->
<!-- <result property="id" column="m_id"> -->
<!-- <result property="pwd" column="m_pwd"> -->
<!-- </result></result></resultmap> -->
 
<!--  위 getMember의 내용에서 더 확장됨을 의미 한다 -->
<!-- <resultmap id="getJoinMember" class="member" extends="getMember"> -->
<!-- <result property="company_id" column="company_id"> -->
<!-- <result property="company_pwd" column="company_pwd"> -->
<!-- </result></result></resultmap> -->
 
<!-- <select id="getJoinMemberList" resultmap="getJoinMember"> -->
<!-- select a.id as id, a.pwd as pwd, -->
<!-- b.company_id as company_id, -->
<!-- b.company_pwd as company_pwd -->
<!-- from member a, member_company b -->
<!-- where a.m_seq = b.c_seq -->
<!-- 2and a.m_seq = 1 -->
<!-- </select> -->
