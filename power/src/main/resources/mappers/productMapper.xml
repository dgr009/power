<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="api.dao.ProductDao">
<!-- 상품등록 제품종류 -->
<select id="productRegisterReady" parameterType="String" resultType="SmallKind">
select * from small_kind where user_id=#{userId}
</select>

<!-- 상품등록하기 -->
<insert id="insertItem" parameterType="Item" useGeneratedKeys="true" keyProperty="itemNo">
<selectKey keyProperty="itemNo" resultType="int" order="BEFORE">
select itemno_seq.nextval from dual
</selectKey>
insert into item values(#{itemNo},#{itemName},#{itemContent},#{itemPrice},#{itemSize},#{itemSize},sysdate,#{userId},#{smallKind})
</insert>
<!-- 옵션추가하기 -->
<insert id="insertOption" parameterType="ItemOption">
<selectKey keyProperty="optionNo" resultType="int" order="BEFORE">
select optionno_seq.nextval from dual
</selectKey>
insert into item_option values(#{optionNo},#{optionName},#{itemNo})
</insert>
<!--사진등록하기 -->
<insert id="insertItemImg" parameterType="ItemImg">
<selectKey keyProperty="imgNo" resultType="int" order="BEFORE">
select imgno_seq.nextval from dual
</selectKey>
insert into item_img values(#{imgNo},#{imgName},#{itemNo})
</insert>
<!-- 상품정보변경 -->
<!--상품업데이트 -->
<update id="updateItem" parameterType="hashmap">
update item set item_name=#{itemName},item_content=#{itemContent},item_price=#{itemPrice},small_kind=#{smallKind} where item_no=#{itemNo}
</update>
<!-- 상품옵션변경 -->
<update id="updateOption" parameterType="hashmap">
update item_option set option_name=#{optionName} where option_no=#{optionNo}
</update>
<!-- 상품사진변경하기 -->
<update id="updateItemImg" parameterType="hashmap">
update item_img set img_name=#{fileName} where img_name=#{originalName}
</update>
<!-- 등록 상품조회 개수 -->
<select id="selectItemListByKindCnt" parameterType="hashmap" resultType="int">
select count(*) from item  where  user_id=#{userId} 
</select>
<!-- 카테고리 상품조회(리스트 )-->
<select id="selectItemListByKind" parameterType="hashmap" resultType="ItemList">
<![CDATA[
select * from
(select rownum rnum,b.* from 
(select i.item_no,i.item_date,i.item_price,item_name,m.img_name,i.item_inven,user_id
from item i,item_img m where i.item_no=m.item_no and i.user_id=#{userId} and i.small_kind=#{smallKind} and m.img_no in(select min(img_no) from item_img group by item_no)) b
where rownum<=#{end}) where rnum>=#{start}
]]>

</select>
<!--상품등록리스트 -->
<select id="selectItemListByKind1" parameterType="hashmap" resultType="ItemList">
<![CDATA[
select * from
(select rownum rnum,b.* from 
(select i.item_no,i.item_date,i.item_price,item_name,m.img_name,i.item_inven,user_id
from item i,item_img m where i.item_no=m.item_no and i.user_id=#{userId} and m.img_no in(select min(img_no) from item_img group by item_no)) b
where rownum<=#{end}) where rnum>=#{start}
]]>

</select>
<!--미니홈메인 상품등록순으로9개 -->
<select id="selectItemListOrderByDate" parameterType="String" resultType="ItemList">
<![CDATA[
select * from
(select rownum rnum,b.* from 
(select i.item_no,i.item_price,item_name,m.img_name,i.item_inven,i.user_id 
from item i,item_img m where i.item_no=m.item_no and i.user_id=#{userId} and m.img_no in(select min(img_no) from item_img group by item_no) order by i.item_date desc) b
where rownum<=9) where rnum>=1 
]]>

</select>
<!--미니홈메인 상품재고순으로9개 -->
<select id="selectItemListOrderByInven" parameterType="String" resultType="ItemList">
<![CDATA[
select * from
(select rownum rnum,b.* from 
(select i.item_no,i.item_price,item_name,m.img_name,i.item_inven,i.user_id 
from item i,item_img m where i.item_no=m.item_no and i.user_id=#{userId} and m.img_no in(select min(img_no) from item_img group by item_no) order by i.item_inven asc) b
where rownum<=9) where rnum>=1 
]]>
</select>
<!-- 미니홈메인 상품베스트9개 -->
<select id="selectItemListOrderByScore" parameterType="String" resultType="ItemList">
<![CDATA[
select b2.* from
      (select rownum rnum,b.* from
      (select i.item_no ,i.item_name ,m.img_name ,i.item_price,i.item_inven,i.user_id 
      from item i,item_review r,item_img m 
      where m.img_no in(select min(img_no) from item_img group by item_no) and i.item_no=r.item_no(+) and i.item_no=m.item_no
      group by i.item_no,i.item_name,m.img_name 
      order by avg(r.review_score) desc)b )b2 where rnum<=9;
      ]]>
</select>
<!-- 등록상품삭제 -->
<delete id="deleteItem" parameterType="int">
delete from item where item_no=#{item_no}
</delete>
<!-- 상품주문상태변경 -->
<update id="updateOrderStatement" parameterType="int">
update order_statement set order_state='배송중' where order_no=#{orderNo}
</update>
<!-- 배송번호입력 -->
<insert id="insertDelivery" parameterType="hashmap">
insert into delivery values(#{deliNo},sysdate,#{orderNo}) 
</insert>
<!-- 이름으로 검색 개수 -->
<select id="selectItemByNameCnt" parameterType="hashmap" resultType="int">
<![CDATA[
select count(*) from item where user_id=#{userId} and item_name=%#{itemName}%
]]>
</select>
<!-- 상품카테고리로 검색 -->
<select id="productSelectKindCnt" parameterType="hashmap" resultType="int">
select count(*) from item where user_id=#{userId} and small_kind=#{smallKind} 
</select>
<!-- 상품카테고리로 검색 -->

<!-- 이름으로검색 -->
<select id="selectItemByName" parameterType="hashmap" resultType="ItemList">
<![CDATA[
select * from
(select rownum rnum,b.* from 
(select i.item_no,i.item_price,i.item_name,m.img_name ,i.item_inven
from item i,item_img m where i.item_no=m.item_no and i.user_id=#{userId} and m.img_no in(select min(img_no) from item_img group by item_no) and i.item_name=%#{itemName}%) b
where rownum<=9) where rnum>=1; 
]]>
</select>
<!-- 이미지리스트가져오기 -->
<select id="selectItemImg" parameterType="int" resultType="ItemImg">
select *from Item_img where item_no=#{itemNo}
</select>
<!-- 상품신청리스트개수 -->
<select id="selectOrderListCnt" parameterType="int" resultType="int">
select count(*) from order_statement where  item_no=#{itemNo}
</select>
<!-- 상품신청리스트 -->
<select id="orderList" parameterType="hashmap" resultType="ApplicantList">
<![CDATA[
select *from (select ROWNUM rnum, b.* from (select u.user_id,u.user_name,u.user_post,u.user_mail,u.user_phone,o.order_date,o.order_price,o.order_size,o.item_no,o.order_state,o.order_no from users u,order_statement o where u.user_id=o.user_id and o.item_no=#{itemNo} order by o.ORDER_DATE DESC)b where rownum<=#{end}) where rnum>=#{start}
]]>
</select>
<!-- 상품상세조회 -->
<select id="selectItemDetail" parameterType="int" resultType="Item">
select *from item where item_no=#{itemNo}
</select>
<!-- 상품옵션가져오기-->
<select id="selectProductOption" parameterType="int" resultType="itemOption">
select *from item_option where item_no=#{itemNo}
</select>
<!-- 상품문의 작성 -->
<insert id="InsertInquiry" parameterType="InquiryBoard">
<selectKey keyProperty="inquiryNo" resultType="int" order="BEFORE">
select inquiryno_seq.nextval from dual
</selectKey>
insert into inquiry_board values(#{inquiryNo},#{inquiryTitle},#{inquiryContent},sysdate,#{itemNo},#{userId})
</insert>
<!-- 상품문의수정 -->
<update id="updateInquiry" parameterType="InquiryBoard">
update inquiry_board set inquiry_title=#{inquiryTitle},inquiry_content=#{inquiryContent} where inquiry_no=#{inquiryNo}
</update>
<!-- 상품문의삭제 -->
<delete id="deleteInquiry" parameterType="int">
delete inquiry_board where inquiry_no=#{inquiryNo}
</delete>

<!-- 상품문의 페이지 -->
<select id="selectInquiry" parameterType="hashmap" resultType="InquiryBoard">
<![CDATA[
select * from(select rownum rnum b.*  from(select *from inquiry_board where item_no=#{itemNo})b where rownum<=#{start}) where rnum>=#{end}
]]>
</select>
<!-- 상품문의 페이지 개수 -->
<select id="selectInquiryCnt" parameterType="int" resultType="int">
select count(*) cnt from inquiry_board where item_no=#{itemNo}
</select>
<!-- 상품문의 댓글가져오기 -->
<select id="selectInquiryReple" parameterType="int" resultType="InquiryReple">
select *from inquiry_reple where inquiry_no=#{inquiryNo}
</select>
<!-- 상품문의 댓글작성-->
<insert id="insertInquiryReple" parameterType="InquiryReple">
<selectKey keyProperty="inquiryRepleNo" resultType="int" order="BEFORE">
select inquiryrepleno_seq.nextval from dual
</selectKey>
insert into inquiry_reple values(#{inquiryRepleNo},#{inquiryRepleContent},sysdate,#{userId}),#{inquiryNo}
</insert>
<!-- 상품문의 댓글수정 -->
<update id="updateInquiryReple" parameterType="InquiryReple">
update inquiry_reple set inquiry_reple_content=#{inquiryRepleContent} where inquiry_reple_no=#{inquiryRepleNo}
</update>
<!-- 상품문의 댓글삭제 -->
<delete id="deleteInquiryReple" parameterType="int">
delete inquiry_reple where inquiry_reple_no=#{inquiryRepleNo}
</delete>
<!-- 상품평가작성 -->
<insert id="insertReview" parameterType="ItemReview">
<selectKey keyProperty="reviewNo"  resultType="int" order="BEFORE">
select reviewno_seq.nextval from dual
</selectKey>
insert into item_review values(#{reviewNo},#{reviewContent},#{reviewScore},sysdate,#{userId}),#{itemNo}
</insert>
<!-- 상품평가수정 -->
<update id="updateReview" parameterType="ItemReview">
update item_review set review_content=#{reviewContent},review_score=#{reviewScore} where review_no=#{reviewNo}
</update>
<!-- 상품평가삭제 -->
<delete id="deleteReivew" parameterType="int">
delete item_review where review_no=#{reviewNo}
</delete>
<!-- 상품평가리스트 -->
<select id="selectReview" parameterType="hashmap" resultType="ItemReview">
<![CDATA[
select * from(select rownum rnum b.*  from(select *from item_review where item_no=#{itemNo})b where rownum<=#{start}) where rnum>=#{end}
]]>
</select>
<!-- 상품평가리스트 개수 -->
<select id="selectReviewCnt" parameterType="int" resultType="int">
select count(*) cnt from item_review where item_no=#{itemNo}
</select>
<!-- 상품평가 댓글가져오기 -->
<select id="selectReviewReple" parameterType="int" resultType="ItemReviewReple">
select *from item_review_reple where review_reple_no=#{reviewNo}
</select>
<!-- 상품평가댓글작성 -->
<insert id="insertReviewReple" parameterType="ItemReviewReple">
<selectKey keyProperty="reviewRepleNo" resultType="int" order="BEFORE">
select reviewrepleno_seq.nextval from dual
</selectKey>
insert into item_review_reple values(#{reviewRepleNo},#{reviewNo},sysdate,#{userId}),#{reviewRepleContent}
</insert>
<!-- 상품평가 댓글수정 -->
<update id="updateReviewReple" parameterType="ItemReviewReple">
update item_review_reple set review_reple_content=#{reviewRepleContent} where review_reple_no=#{reviewRepleNo}
</update>
<!-- 상품평가 댓글삭제 -->
<delete id="deleteReviewReple" parameterType="int">
delete item_review where review_reple_no=#{reviewRepleNo}
</delete>
<!-- 장바구니담기 -->
<insert id="insertBasket" parameterType="hashmap">
insert into basket values(#{itemNo},#{userId})
</insert>
<!-- 장바구니 있는지확인 -->
<select id="selectBasket" parameterType="hashmap" resultType="int">
select count(*) from basket where item_no=#{itemNo} and user_id=#{userId}
</select>
<!-- 배송리스트 개수 -->
<select id="selectDeliveryCnt" parameterType="String">
select count(*) from order_statement o,item i,delivery d where i.item_no=o.item_no and d.order_no,o.order_no and o.order_state='배송중' and i.user_id=#{userId}
</select>
<!-- 배송리스트 -->
<select id="deliveryList" parameterType="hashmap" resultType="DeliveryList">
<![CDATA[
select * from(select rownum rnum,b* from (select i.item_name,o.item_no,o.order_size,o.order_price,o.orderNo,d.deli_date, from order_statement o,item i,delivery d where i.item_no=o.item_no and d.order_no,o.order_no and o.order_state='배송중' and i.user_id=#{userId})b where rownum<=#{end})where rnum>=#{start}
]]>
</select>
<!-- 주문하기 -->
<!-- 상품등록자찾기 -->
<select id="getOwnerId" parameterType="int" resultType="String">
select user_id from item where item_no=#{itemNo}
</select>
<!-- 회원포인트차감 -->
<update id="orderUserPoint" parameterType="hashmap">
update users set user_point=user_point-#{orderPrice} where user_id=#{userId}
</update>
<!-- 주인포인트증가 -->
<update id="orderOwnerPoint" parameterType="hashmap">
update users set user_point=user_point+#{orderPrice} where user_id=#{userId}
</update>
<!-- 주문내역입력 -->
<insert id="insertOrderStatement" parameterType="OrderStatement">
<selectKey keyProperty="orderNo" resultType="int" order="BEFORE">
select orderno_seq.nextval from dual 
</selectKey>
insert into order_statement values(#{orderNo},'배송준비중',#{orderSize},#{orderPrice},sysdate,#{userId},#{itemNo},#{optionName}) 
</insert>
<!--상품재고차감 -->
<update id="updateItemInven" parameterType="hashmap">
update item set item_inven=item_inven-#{orderSize} where item_no=#{itemNo}
</update>
<!-- 메뉴창 smallKind 가져오기 -->
<select id="selectSmallKind" parameterType="String" resultType="SmallKind">
select *from small_kind where user_id=#{userId} order by small_kind_no asc
</select>
<!-- 메뉴창 bigKind 가져오기 -->
<select id="selectBigKind" parameterType="String" resultType="BigKind">
select*from big_kind where user_id=#{userId} order by big_kind_no asc
</select>
<!-- 메뉴창 bigKind 가져오기 -->

</mapper>